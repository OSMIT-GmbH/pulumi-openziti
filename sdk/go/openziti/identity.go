// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package openziti

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"internal"
	"rest_model"
)

type Identity struct {
	pulumi.CustomResourceState

	_assimilated              pulumi.BoolOutput                       `pulumi:"_assimilated"`
	_links                    LinkMapOutput                           `pulumi:"_links"`
	AppData                   pulumi.MapOutput                        `pulumi:"appData"`
	AuthPolicy                EntityRefOutput                         `pulumi:"authPolicy"`
	AuthPolicyId              pulumi.StringOutput                     `pulumi:"authPolicyId"`
	Authenticators            rest_model.IdentityAuthenticatorsOutput `pulumi:"authenticators"`
	CreatedAt                 pulumi.StringOutput                     `pulumi:"createdAt"`
	DefaultHostingCost        pulumi.IntOutput                        `pulumi:"defaultHostingCost"`
	DefaultHostingPrecedence  pulumi.StringPtrOutput                  `pulumi:"defaultHostingPrecedence"`
	Disabled                  pulumi.BoolOutput                       `pulumi:"disabled"`
	DisabledAt                pulumi.StringPtrOutput                  `pulumi:"disabledAt"`
	DisabledUntil             pulumi.StringPtrOutput                  `pulumi:"disabledUntil"`
	Enrollment                IdentityEnrollmentsOutput               `pulumi:"enrollment"`
	EnvInfo                   EnvInfoOutput                           `pulumi:"envInfo"`
	ExternalId                pulumi.StringPtrOutput                  `pulumi:"externalId"`
	HasApiSession             pulumi.BoolOutput                       `pulumi:"hasApiSession"`
	HasEdgeRouterConnection   pulumi.BoolOutput                       `pulumi:"hasEdgeRouterConnection"`
	Id                        pulumi.StringOutput                     `pulumi:"id"`
	IsAdmin                   pulumi.BoolOutput                       `pulumi:"isAdmin"`
	IsDefaultAdmin            pulumi.BoolOutput                       `pulumi:"isDefaultAdmin"`
	IsMfaEnabled              pulumi.BoolOutput                       `pulumi:"isMfaEnabled"`
	Name                      pulumi.StringOutput                     `pulumi:"name"`
	RoleAttributes            pulumi.StringArrayOutput                `pulumi:"roleAttributes"`
	SdkInfo                   SdkInfoOutput                           `pulumi:"sdkInfo"`
	ServiceHostingCosts       pulumi.IntMapOutput                     `pulumi:"serviceHostingCosts"`
	ServiceHostingPrecedences pulumi.StringMapOutput                  `pulumi:"serviceHostingPrecedences"`
	Tags                      pulumi.MapOutput                        `pulumi:"tags"`
	Type                      EntityRefOutput                         `pulumi:"type"`
	TypeId                    pulumi.StringOutput                     `pulumi:"typeId"`
	UpdatedAt                 pulumi.StringOutput                     `pulumi:"updatedAt"`
}

// NewIdentity registers a new resource with the given unique name, arguments, and options.
func NewIdentity(ctx *pulumi.Context,
	name string, args *IdentityArgs, opts ...pulumi.ResourceOption) (*Identity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IsAdmin == nil {
		return nil, errors.New("invalid value for required argument 'IsAdmin'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"enrollment",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Identity
	err := ctx.RegisterResource("openziti:index:Identity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentity gets an existing Identity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityState, opts ...pulumi.ResourceOption) (*Identity, error) {
	var resource Identity
	err := ctx.ReadResource("openziti:index:Identity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Identity resources.
type identityState struct {
}

type IdentityState struct {
}

func (IdentityState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityState)(nil)).Elem()
}

type identityArgs struct {
	AppData                   map[string]interface{}    `pulumi:"appData"`
	AuthPolicyId              *string                   `pulumi:"authPolicyId"`
	DefaultHostingCost        *int                      `pulumi:"defaultHostingCost"`
	DefaultHostingPrecedence  *string                   `pulumi:"defaultHostingPrecedence"`
	Enrollment                *IdentityCreateEnrollment `pulumi:"enrollment"`
	ExternalId                *string                   `pulumi:"externalId"`
	IsAdmin                   bool                      `pulumi:"isAdmin"`
	Name                      string                    `pulumi:"name"`
	RoleAttributes            []string                  `pulumi:"roleAttributes"`
	ServiceHostingCosts       map[string]int            `pulumi:"serviceHostingCosts"`
	ServiceHostingPrecedences map[string]string         `pulumi:"serviceHostingPrecedences"`
	Tags                      map[string]interface{}    `pulumi:"tags"`
	Type                      string                    `pulumi:"type"`
}

// The set of arguments for constructing a Identity resource.
type IdentityArgs struct {
	AppData                   pulumi.MapInput
	AuthPolicyId              pulumi.StringPtrInput
	DefaultHostingCost        pulumi.IntPtrInput
	DefaultHostingPrecedence  pulumi.StringPtrInput
	Enrollment                IdentityCreateEnrollmentPtrInput
	ExternalId                pulumi.StringPtrInput
	IsAdmin                   pulumi.BoolInput
	Name                      pulumi.StringInput
	RoleAttributes            pulumi.StringArrayInput
	ServiceHostingCosts       pulumi.IntMapInput
	ServiceHostingPrecedences pulumi.StringMapInput
	Tags                      pulumi.MapInput
	Type                      pulumi.StringInput
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityArgs)(nil)).Elem()
}

type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(ctx context.Context) IdentityOutput
}

func (*Identity) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *Identity) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i *Identity) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i *Identity) ToOutput(ctx context.Context) pulumix.Output[*Identity] {
	return pulumix.Output[*Identity]{
		OutputState: i.ToIdentityOutputWithContext(ctx).OutputState,
	}
}

type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToOutput(ctx context.Context) pulumix.Output[*Identity] {
	return pulumix.Output[*Identity]{
		OutputState: o.OutputState,
	}
}

func (o IdentityOutput) _assimilated() pulumi.BoolOutput {
	return o.ApplyT(func(v *Identity) pulumi.BoolOutput { return v._assimilated }).(pulumi.BoolOutput)
}

func (o IdentityOutput) _links() LinkMapOutput {
	return o.ApplyT(func(v *Identity) LinkMapOutput { return v._links }).(LinkMapOutput)
}

func (o IdentityOutput) AppData() pulumi.MapOutput {
	return o.ApplyT(func(v *Identity) pulumi.MapOutput { return v.AppData }).(pulumi.MapOutput)
}

func (o IdentityOutput) AuthPolicy() EntityRefOutput {
	return o.ApplyT(func(v *Identity) EntityRefOutput { return v.AuthPolicy }).(EntityRefOutput)
}

func (o IdentityOutput) AuthPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringOutput { return v.AuthPolicyId }).(pulumi.StringOutput)
}

func (o IdentityOutput) Authenticators() rest_model.IdentityAuthenticatorsOutput {
	return o.ApplyT(func(v *Identity) rest_model.IdentityAuthenticatorsOutput { return v.Authenticators }).(rest_model.IdentityAuthenticatorsOutput)
}

func (o IdentityOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o IdentityOutput) DefaultHostingCost() pulumi.IntOutput {
	return o.ApplyT(func(v *Identity) pulumi.IntOutput { return v.DefaultHostingCost }).(pulumi.IntOutput)
}

func (o IdentityOutput) DefaultHostingPrecedence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringPtrOutput { return v.DefaultHostingPrecedence }).(pulumi.StringPtrOutput)
}

func (o IdentityOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Identity) pulumi.BoolOutput { return v.Disabled }).(pulumi.BoolOutput)
}

func (o IdentityOutput) DisabledAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringPtrOutput { return v.DisabledAt }).(pulumi.StringPtrOutput)
}

func (o IdentityOutput) DisabledUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringPtrOutput { return v.DisabledUntil }).(pulumi.StringPtrOutput)
}

func (o IdentityOutput) Enrollment() IdentityEnrollmentsOutput {
	return o.ApplyT(func(v *Identity) IdentityEnrollmentsOutput { return v.Enrollment }).(IdentityEnrollmentsOutput)
}

func (o IdentityOutput) EnvInfo() EnvInfoOutput {
	return o.ApplyT(func(v *Identity) EnvInfoOutput { return v.EnvInfo }).(EnvInfoOutput)
}

func (o IdentityOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringPtrOutput { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o IdentityOutput) HasApiSession() pulumi.BoolOutput {
	return o.ApplyT(func(v *Identity) pulumi.BoolOutput { return v.HasApiSession }).(pulumi.BoolOutput)
}

func (o IdentityOutput) HasEdgeRouterConnection() pulumi.BoolOutput {
	return o.ApplyT(func(v *Identity) pulumi.BoolOutput { return v.HasEdgeRouterConnection }).(pulumi.BoolOutput)
}

func (o IdentityOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringOutput { return v.Id }).(pulumi.StringOutput)
}

func (o IdentityOutput) IsAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v *Identity) pulumi.BoolOutput { return v.IsAdmin }).(pulumi.BoolOutput)
}

func (o IdentityOutput) IsDefaultAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v *Identity) pulumi.BoolOutput { return v.IsDefaultAdmin }).(pulumi.BoolOutput)
}

func (o IdentityOutput) IsMfaEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Identity) pulumi.BoolOutput { return v.IsMfaEnabled }).(pulumi.BoolOutput)
}

func (o IdentityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityOutput) RoleAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringArrayOutput { return v.RoleAttributes }).(pulumi.StringArrayOutput)
}

func (o IdentityOutput) SdkInfo() SdkInfoOutput {
	return o.ApplyT(func(v *Identity) SdkInfoOutput { return v.SdkInfo }).(SdkInfoOutput)
}

func (o IdentityOutput) ServiceHostingCosts() pulumi.IntMapOutput {
	return o.ApplyT(func(v *Identity) pulumi.IntMapOutput { return v.ServiceHostingCosts }).(pulumi.IntMapOutput)
}

func (o IdentityOutput) ServiceHostingPrecedences() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringMapOutput { return v.ServiceHostingPrecedences }).(pulumi.StringMapOutput)
}

func (o IdentityOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *Identity) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

func (o IdentityOutput) Type() EntityRefOutput {
	return o.ApplyT(func(v *Identity) EntityRefOutput { return v.Type }).(EntityRefOutput)
}

func (o IdentityOutput) TypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringOutput { return v.TypeId }).(pulumi.StringOutput)
}

func (o IdentityOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityInput)(nil)).Elem(), &Identity{})
	pulumi.RegisterOutputType(IdentityOutput{})
}
