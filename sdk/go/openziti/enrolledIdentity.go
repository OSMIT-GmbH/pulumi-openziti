// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package openziti

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"internal"
)

type EnrolledIdentity struct {
	pulumi.CustomResourceState

	EnrollmentJwt pulumi.StringOutput `pulumi:"enrollmentJwt"`
	IdentityJson  pulumi.StringOutput `pulumi:"identityJson"`
}

// NewEnrolledIdentity registers a new resource with the given unique name, arguments, and options.
func NewEnrolledIdentity(ctx *pulumi.Context,
	name string, args *EnrolledIdentityArgs, opts ...pulumi.ResourceOption) (*EnrolledIdentity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnrollmentJwt == nil {
		return nil, errors.New("invalid value for required argument 'EnrollmentJwt'")
	}
	if args.EnrollmentJwt != nil {
		args.EnrollmentJwt = pulumi.ToSecret(args.EnrollmentJwt).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"enrollmentJwt",
		"identityJson",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnrolledIdentity
	err := ctx.RegisterResource("openziti:index:EnrolledIdentity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnrolledIdentity gets an existing EnrolledIdentity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnrolledIdentity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnrolledIdentityState, opts ...pulumi.ResourceOption) (*EnrolledIdentity, error) {
	var resource EnrolledIdentity
	err := ctx.ReadResource("openziti:index:EnrolledIdentity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnrolledIdentity resources.
type enrolledIdentityState struct {
}

type EnrolledIdentityState struct {
}

func (EnrolledIdentityState) ElementType() reflect.Type {
	return reflect.TypeOf((*enrolledIdentityState)(nil)).Elem()
}

type enrolledIdentityArgs struct {
	EnrollmentJwt string `pulumi:"enrollmentJwt"`
}

// The set of arguments for constructing a EnrolledIdentity resource.
type EnrolledIdentityArgs struct {
	EnrollmentJwt pulumi.StringInput
}

func (EnrolledIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*enrolledIdentityArgs)(nil)).Elem()
}

type EnrolledIdentityInput interface {
	pulumi.Input

	ToEnrolledIdentityOutput() EnrolledIdentityOutput
	ToEnrolledIdentityOutputWithContext(ctx context.Context) EnrolledIdentityOutput
}

func (*EnrolledIdentity) ElementType() reflect.Type {
	return reflect.TypeOf((**EnrolledIdentity)(nil)).Elem()
}

func (i *EnrolledIdentity) ToEnrolledIdentityOutput() EnrolledIdentityOutput {
	return i.ToEnrolledIdentityOutputWithContext(context.Background())
}

func (i *EnrolledIdentity) ToEnrolledIdentityOutputWithContext(ctx context.Context) EnrolledIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnrolledIdentityOutput)
}

func (i *EnrolledIdentity) ToOutput(ctx context.Context) pulumix.Output[*EnrolledIdentity] {
	return pulumix.Output[*EnrolledIdentity]{
		OutputState: i.ToEnrolledIdentityOutputWithContext(ctx).OutputState,
	}
}

type EnrolledIdentityOutput struct{ *pulumi.OutputState }

func (EnrolledIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnrolledIdentity)(nil)).Elem()
}

func (o EnrolledIdentityOutput) ToEnrolledIdentityOutput() EnrolledIdentityOutput {
	return o
}

func (o EnrolledIdentityOutput) ToEnrolledIdentityOutputWithContext(ctx context.Context) EnrolledIdentityOutput {
	return o
}

func (o EnrolledIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[*EnrolledIdentity] {
	return pulumix.Output[*EnrolledIdentity]{
		OutputState: o.OutputState,
	}
}

func (o EnrolledIdentityOutput) EnrollmentJwt() pulumi.StringOutput {
	return o.ApplyT(func(v *EnrolledIdentity) pulumi.StringOutput { return v.EnrollmentJwt }).(pulumi.StringOutput)
}

func (o EnrolledIdentityOutput) IdentityJson() pulumi.StringOutput {
	return o.ApplyT(func(v *EnrolledIdentity) pulumi.StringOutput { return v.IdentityJson }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnrolledIdentityInput)(nil)).Elem(), &EnrolledIdentity{})
	pulumi.RegisterOutputType(EnrolledIdentityOutput{})
}
