// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EdgeRouter extends pulumi.CustomResource {
    /**
     * Get an existing EdgeRouter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EdgeRouter {
        return new EdgeRouter(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'openziti:index:EdgeRouter';

    /**
     * Returns true if the given object is an instance of EdgeRouter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeRouter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeRouter.__pulumiType;
    }

    public /*out*/ readonly _links!: pulumi.Output<{[key: string]: outputs.Link}>;
    public /*out*/ readonly certPem!: pulumi.Output<string | undefined>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public /*out*/ readonly enrollmentCreatedAt!: pulumi.Output<string | undefined>;
    public /*out*/ readonly enrollmentExpiresAt!: pulumi.Output<string | undefined>;
    public /*out*/ readonly enrollmentJwt!: pulumi.Output<string | undefined>;
    public /*out*/ readonly enrollmentToken!: pulumi.Output<string | undefined>;
    public /*out*/ readonly fingerprint!: pulumi.Output<string | undefined>;
    public /*out*/ readonly hostname!: pulumi.Output<string>;
    public /*out*/ readonly id!: pulumi.Output<string>;
    public /*out*/ readonly isOnline!: pulumi.Output<boolean>;
    public readonly isTunnelerEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly isVerified!: pulumi.Output<boolean>;
    public readonly name!: pulumi.Output<string>;
    public readonly roleAttributes!: pulumi.Output<string[]>;
    public /*out*/ readonly supportedProtocols!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly syncStatus!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    public /*out*/ readonly unverifiedCertPem!: pulumi.Output<string | undefined>;
    public /*out*/ readonly unverifiedFingerprint!: pulumi.Output<string | undefined>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a EdgeRouter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgeRouterArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["appData"] = args ? args.appData : undefined;
            resourceInputs["cost"] = args ? args.cost : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["isTunnelerEnabled"] = args ? args.isTunnelerEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["noTraversal"] = args ? args.noTraversal : undefined;
            resourceInputs["roleAttributes"] = args ? args.roleAttributes : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["_links"] = undefined /*out*/;
            resourceInputs["certPem"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["enrollmentCreatedAt"] = undefined /*out*/;
            resourceInputs["enrollmentExpiresAt"] = undefined /*out*/;
            resourceInputs["enrollmentJwt"] = undefined /*out*/;
            resourceInputs["enrollmentToken"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["hostname"] = undefined /*out*/;
            resourceInputs["id"] = undefined /*out*/;
            resourceInputs["isOnline"] = undefined /*out*/;
            resourceInputs["isVerified"] = undefined /*out*/;
            resourceInputs["supportedProtocols"] = undefined /*out*/;
            resourceInputs["syncStatus"] = undefined /*out*/;
            resourceInputs["unverifiedCertPem"] = undefined /*out*/;
            resourceInputs["unverifiedFingerprint"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        } else {
            resourceInputs["_links"] = undefined /*out*/;
            resourceInputs["certPem"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["enrollmentCreatedAt"] = undefined /*out*/;
            resourceInputs["enrollmentExpiresAt"] = undefined /*out*/;
            resourceInputs["enrollmentJwt"] = undefined /*out*/;
            resourceInputs["enrollmentToken"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["hostname"] = undefined /*out*/;
            resourceInputs["id"] = undefined /*out*/;
            resourceInputs["isOnline"] = undefined /*out*/;
            resourceInputs["isTunnelerEnabled"] = undefined /*out*/;
            resourceInputs["isVerified"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["roleAttributes"] = undefined /*out*/;
            resourceInputs["supportedProtocols"] = undefined /*out*/;
            resourceInputs["syncStatus"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["unverifiedCertPem"] = undefined /*out*/;
            resourceInputs["unverifiedFingerprint"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgeRouter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a EdgeRouter resource.
 */
export interface EdgeRouterArgs {
    appData?: pulumi.Input<{[key: string]: any}>;
    cost?: pulumi.Input<number>;
    disabled?: pulumi.Input<boolean>;
    isTunnelerEnabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    noTraversal?: pulumi.Input<boolean>;
    roleAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{[key: string]: any}>;
}
